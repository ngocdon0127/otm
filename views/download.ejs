<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
     <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!-- CryptoJS -->
    <!-- <script type="text/javascript" src="/javascripts/crypto-js.js"></script> -->
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-10 col-xs-12 col-lg-offset-3 col-md-offset-2 col-sm-1">
          <h2>Download</h2>
          <div class="form-group">
            <label for="id">id:</label>
            <input type="id" class="form-control" id="id" onchange="load(this)" placeholder="Enter id" name="id">
          </div>
          <div class="form-group">
            <label for="text">Text:</label>
            <textarea class="form-control" id="text" placeholder="Enter text" name="text"></textarea>
          </div>
          <div class="form-group">
            <label for="attachments">Attachments:</label>
            <div class="list-group" id="list-attachments">
              <!-- <a href="#" class="list-group-item">First item</a> -->
            </div>
          </div>
          <button class="btn btn-default" onclick="downloadAll()">Download All</button>
        </div>
        <div class="col-lg-2 col-md-2 col-xs-12 col-sm-2">
          <div id="circle-progress" style="display: none"></div>
        </div>
      </div>
    </div>

    <script src="/javascripts/FileSaver.js"></script>
    <script src="/javascripts/circle-progress/circle-progress.min.js"></script>
    
    <script>
      function downloadAll() {
        console.log(1)
      }
      function load(input) {
        console.log(input.value);
        $.ajax({
          url: `/record/${input.value}`,
          type: 'GET',
          success: function (res) {
            console.log(res)
            if (res.status == 'success') {
              $('#text').val(res.text)
              if (res.attachments instanceof Array) {
                for(var i = 0; i < res.attachments.length; i++) {
                  var a = document.createElement('a');
                  a.href = '#';
                  a.setAttribute('class', 'list-group-item');
                  a.setAttribute('data-download-url', '/dl/' + res.attachments[i].filename);
                  a.setAttribute('data-original-name', res.attachments[i].originalname);
                  a.addEventListener('click', download);
                  a.innerHTML = res.attachments[i].originalname;
                  document.getElementById('list-attachments').appendChild(a)
                }
              }
            } else {
              return alert('Có lỗi xảy ra')
            }
          },
          error: function (err) {
            console.log(err);
            try {
              var err = JSON.parse(err.responseText);
              alert(err.error)
            } catch (e) {
              alert('Có lỗi xảy ra.')
              console.log(e);
            }
          }
        })
      }

      function download(evt) {
        console.log(evt.target);
        $('#circle-progress').circleProgress({
          value: 0,
          size: 80,
          fill: {
            gradient: ["green"]
          },
          animation: false
        });
        $('#circle-progress').fadeIn(10);
        var xhr = new XMLHttpRequest();
        // var xhr = $.ajaxSettings.xhr();
        xhr.onprogress = function (e) {
          // For downloads
          if (e.lengthComputable) {
              $('#circle-progress').circleProgress('value', e.loaded / e.total)
          }
        };
        xhr.upload.onprogress = function (e) {
          // For uploads
          if (e.lengthComputable) {
          }
        };

        xhr.onreadystatechange = function () {
          if ((xhr.readyState == 4) && (xhr.status == 200)){
            var disposition = xhr.getResponseHeader('Content-Disposition');
            disposition = decodeURIComponent(disposition);
            var fields = disposition.split([';']);
            console.log(disposition);
            console.log(fields);
            var fileName = evt.target.getAttribute('data-original-name');
            fileName = fileName.replace(/[^a-zA-Z]+$/g, '');
            var type = xhr.getResponseHeader('Content-Type');
            // console.log(type);
            var blob = new Blob([xhr.response], {type: type});
            saveAs(blob, fileName);
            setTimeout(function () {
              $('#circle-progress').fadeOut(500);
            }, 500)
            // arr[index].checked = false;
            // progressBar.style.width = (index + 1) / totalFile * 100 + '%';
            // progressBar.innerHTML = (index + 1) + ' / ' + totalFile;
            // progressBar.setAttribute('aria-valuenow', index);
            // if (index >= totalFile - 1){
            //   setTimeout(function () {
            //     $(progressBarContainer).fadeOut(1000);
            //   }, 500)
            // }
            // setTimeout(function () {
            //   download(index + 1, fields_form);
            // }, 100);
          }
        }

        xhr.open('GET', evt.target.getAttribute('data-download-url'), true);
        xhr.responseType = 'arraybuffer';
        xhr.send();

      }
    </script>
  </body>
</html>
